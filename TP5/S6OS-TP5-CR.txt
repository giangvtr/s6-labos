Little endian : if see 00 02 it means 0x0200

Bytes Content
0-2 Jump to bootstrap
3-10 OEM name/version (Original Equipment Manufacturer)
/* BIOS Parameter Block starts here */
11-12 Number of bytes per sector
13 Number of sectors per cluster
14-15 Number of reserved sectors
FAT12 and FAT16 use 1. FAT32 uses 32
16 Number of FAT copies
17-18 Number of root directory entries
An entry takes 32 bytes
19-20 Total number of sectors in the filesystem
21 Media descriptor type
(for example, f0 : 1.4 MB floppy, f8 : hard disk)
22-23 Number of sectors per FAT
24-25 Number of sectors per track
26-27 Number of heads
28-29 Number of hidden sectors
/* BIOS Parameter Block ends here */
30-509 Bootstrap
510-511 Signature 55 aa

Here is an example of a boot sector using hexadecimal values :
eb 3c 90 4d 53 44 4f 53 35 2e 30 00 02 01 01 00
02 e0 00 40 0b f0 09 00 12 00 02 00 00 00 00 00
00 00 00 00 00 00 29 ca 18 39 19 4d 53 44 4f 53
20 20 20 20 20 20 46 41 54 31 32 20 20 20 fa 33
c0 8e d0 bc 00 7c 16 07 bb 78 00 36 c5 37 1e 56
16 53 bf 3e 7c b9 0b 00 fc f3 a4 06 1f c6 45 fe
0f 8b 0e 18 7c 88 4d f9 89 47 02 c7 07 3e 7c fb
cd 13 72 79 33 c0 39 06 13 7c 74 08 8b 0e 13 7c
89 0e 20 7c a0 10 7c f7 26 16 7c 03 06 1c 7c 13
16 1e 7c 03 06 0e 7c 83 d2 00 a3 50 7c 89 16 52
7c a3 49 7c 89 16 4b 7c b8 20 00 f7 26 11 7c 8b
...
0001f0 53 4 d 53 44 4 f 53 20 20 20 53 59 53 00 00 55 aa
Give the caracteristics of the given example :

1. the size of a sector : regarde byte 11-12 : 0x0200 number of bytes per sector : 512 bytes
2. the size of a cluster : byte 13 - number of sector per cluster
On trouve 0x01 ==> 1 sector/cluster donc 512 bytes
3. the size of the root directory: 0x00E0 = 224 number of root directory entries ==> 224 * 32 = 7168 bytes
4. the FAT size : bit 0x16-0x17 (22-23) : 0x0009 = 9 sectors per FAT ==> Taille fat = 9 * 512 = 4608 bytes
5. the number of FAT copies = 0x02 = 2 copies (On a FAT1 & FAT2)
6. Deduce the address of the root directory (see page 67/CM3)
- The root start just after FAT2 (on a exactement 2 fat)
- Look for number of reserved sector : 0x01 = 1 reserved sector ==> Taille sum = 512
- Somme taille reserved + fat1 + fat2 = 512 + 2* 4608 = 9728 = 19 clusters 
- Convert en hexa : 0x00002600 

7. the number of hidden sectors : sur byte 1C et 1D = 0x0000
8. Deduce the address of the first cluster (each cluster is an entry - 2 hexa bits) that could store file data : 
- The root directory starts at byte offset 0x2600 (question 7).
- Root directory size: 7168 bytes (question 3) / 512 = 14 clusters
- Data area starts at cluster 19 + 14 = sector 33.
==> Adresse = 0x21

====EXERCISE PART ======
1. Use grep to find HTML file's offset
    -a: Process a binary file as if it were text (treats all input as text).
    -b: Print the byte offset of each matched line before the line.
    -o: Print only the matched (non-empty) parts of matching lines.

FInd the HTML tag in a file: grep -aob '<[^>]\+>' filename
